default:
  image: node:latest
  before_script:
    - npm ci --cache .npm --prefer-offline
    - |
      {
        echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
        echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=\${NPM_TOKEN}"
      } | tee --append .npmrc
    # - npm ci --cache .npm --prefer-offline
    # - |
    #   {
    #     echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
    #     echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=\${CI_JOB_TOKEN}"
    #   } | tee --append .npmrc
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
      - build/
      - node_modules/

# variables:
#   NPM_TOKEN: ${NPM_TOKEN}
  # NPM_TOKEN: ${CI_JOB_TOKEN}

stages:
  - install
  - build
  - test
  - publish

install deps:
  stage: install
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/

build:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - build/

test:
  stage: test
  script:
    - npm run test

## bumping is handled prior to commit, using husky
# bump-version:
#   stage: bump-version
#   script:
#     - npm version patch
#   artifacts:
#     paths:
#       - package.json
#       - package-lock.json

publish:
  stage: publish
  script:
    - cd ./
    - pkg_name=$(node -p -e "require('./package.json').name")
    - pkg_vers=$(node -p -e "require('./package.json').version")
    - echo "About to publish $pkg_name@$pkg_vers"
    - npm publish
  # variables:
  #   NPM_TOKEN: $NPM_TOKEN
